create or replace view IM_VAULT_DEV.BDV_OVR_TEST.FUND_CLASS_NAV_SAT(
	FUND_CLASS_ID,
	FUND_CLASS_HKEY,
	BUSINESS_DATE,
	NAV_CALC_DATE,
	NET_ASSET_VALUE,
	NAV_PER_SHARE,
	NET_CAPSTOCK_SHARES_OUTSTANDING,
  HASH_DIFF,
	LOAD_DATETIME
) as
 (  
WITH ACFWRP AS(
  SELECT * 
, TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') AS FROM_DATE
, IFNULL(TRY_TO_DATE(LAG(BUS_DATE) OVER (PARTITION BY FUND_WRAPPER_INSIGHTS_TICKER 
         ORDER BY TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') DESC)::VARCHAR,'YYYYMMDD')-1, TO_DATE('99991231', 'YYYYMMDD')) AS TO_DATE_T
  ,COALESCE(NULLIF(FUND_WRAPPER_SSGS_ACCOUNT_CLOSED_DATE, ''), TO_DATE_T) TO_DATE
FROM IM_VAULT_DEV.RDV.ACCOUNT_FUND_WRAPPER_SAT  WHERE TRIM(SSGS_NAV_BASIS_IND) IN('A','T')
      -- QUALIFY ROW_NUMBER() OVER(PARTITION BY FUND_WRAPPER_ID ORDER BY FROM_DATE DESC)=1
  ORDER BY LNK_ACCOUNT_FUND_WRAPPER_BKEY
), 
 ACSLV AS(
  SELECT * 
, TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') AS FROM_DATE
, IFNULL(TRY_TO_DATE(LAG(BUS_DATE) OVER (PARTITION BY SLEEVE_INSIGHTS_TICKER 
         ORDER BY TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') DESC)::VARCHAR,'YYYYMMDD')-1, TO_DATE('99991231', 'YYYYMMDD')) AS TO_DATE_T
,COALESCE(NULLIF(SLEEVE_SSGS_ACCOUNT_CLOSED_DATE, ''), TO_DATE_T) TO_DATE
FROM IM_VAULT_DEV.RDV.ACCOUNT_SLEEVE_SAT
    --QUALIFY ROW_NUMBER() OVER(PARTITION BY SLEEVE_ID ORDER BY FROM_DATE DESC)=1

ORDER BY LNK_ACCOUNT_SLEEVE_BKEY
),
   
SLV AS (
  SELECT * 
, TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') AS FROM_DATE
, IFNULL(TRY_TO_DATE(LAG(BUS_DATE) OVER (PARTITION BY SLEEVE_HKEY 
         ORDER BY TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') DESC)::VARCHAR,'YYYYMMDD')-1, TO_DATE('99991231', 'YYYYMMDD')) AS TO_DATE_T 
,COALESCE(NULLIF(SLEEVE_CLOSED_DATE, ''), TO_DATE_T) TO_DATE
  FROM IM_VAULT_DEV.RDV.SLEEVE_SAT ORDER BY SLEEVE_BKEY
),
 FC AS(
  SELECT * 
, TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') AS FROM_DATE
, IFNULL(TRY_TO_DATE(LAG(BUS_DATE) OVER (PARTITION BY FUND_CLASS_HKEY 
         ORDER BY TRY_TO_DATE(BUS_DATE::VARCHAR,'YYYYMMDD') DESC)::VARCHAR,'YYYYMMDD')-1, TO_DATE('99991231', 'YYYYMMDD')) AS TO_DATE_T 
,COALESCE(NULLIF(FUND_CLASS_CLOSED_DATE, ''), TO_DATE_T) TO_DATE
   FROM IM_VAULT_DEV.RDV.FUND_CLASS_SAT ORDER BY FUND_CLASS_BKEY
),
AC_WR_SL_SSGS AS(
  SELECT STT_MCH_ACCOUNT_CODE,FUND_WRAPPER_INSIGHTS_TICKER,ACFWRP.FROM_DATE,ACFWRP.TO_DATE FROM ACFWRP
  UNION
  SELECT STT_MCH_ACCOUNT_CODE,FUND_WRAPPER_INSIGHTS_TICKER,ACSLV.FROM_DATE,ACSLV.TO_DATE FROM ACSLV
  JOIN SLV ON ACSLV.SLEEVE_ID=SLV.SLEEVE_ID

),
FUND_CLASS_NAV_SAT AS (
    SELECT DISTINCT
        FC.FUND_CLASS_BKEY AS FUND_CLASS_ID,
        FC.FUND_CLASS_HKEY AS FUND_CLASS_HKEY,
        --FC.FUND_WRAPPER_INSIGHTS_TICKER,BASIS_IND,
        TRY_TO_DATE(NAV.BUSINESS_DATE,'YYYY-MM-DD') AS BUSINESS_DATE,
        TRY_TO_DATE(NAV.NAV_DATE,'YYYYMMDD') AS NAV_CALC_DATE,
        TRY_TO_NUMERIC(NAV.NET_ASSET, 38, 2) AS NET_ASSET_VALUE,
        -- NV.NAV_CHG AS NAV_CHG,
        TO_NUMERIC(NAV.NAV, 38, 4) AS NAV_PER_SHARE,
        TO_NUMERIC(NAV.NET_SHARES_OUTST, 38, 3) AS NET_CAPSTOCK_SHARES_OUTSTANDING,
        NAV.HASH_DIFF,
        NAV.LOAD_DATETIME
    FROM 
        IM_VAULT_DEV.RDV.NAV_SSB_SAT NAV 
    JOIN 
        ACFWRP 
        ON (NAV.ACCOUNT_BKEY=ACFWRP .STT_MCH_ACCOUNT_CODE 
        AND TO_DATE(NAV_DATE, 'YYYYMMDD')>= ACFWRP .FROM_DATE 
        AND  TO_DATE(NAV_DATE, 'YYYYMMDD')<= ACFWRP .TO_DATE
        )
    JOIN 
        FC FC
        ON(FC.FUND_WRAPPER_INSIGHTS_TICKER=ACFWRP .FUND_WRAPPER_INSIGHTS_TICKER AND NAV.BASIS_IND=FC.STT_MCH_BASIS_IND
        AND TO_DATE(NAV_DATE, 'YYYYMMDD')>= FC.FROM_DATE
        AND  TO_DATE(NAV_DATE, 'YYYYMMDD')<= FC.TO_DATE
        )

    UNION ALL

        SELECT DISTINCT
        FC.FUND_CLASS_BKEY AS FUND_CLASS_ID,
        FC.FUND_CLASS_HKEY AS FUND_CLASS_HKEY,
        --FC.FUND_WRAPPER_INSIGHTS_TICKER,BASIS_IND,
        TRY_TO_DATE(NAV.NAV_DATE,'YYYYMMDD') AS BUSINESS_DATE,
        TRY_TO_DATE(NAV.NAV_DATE,'YYYYMMDD') AS NAV_CALC_DATE,
        TRY_TO_NUMERIC(NAV.NET_ASSET, 38, 2) AS NET_ASSET_VALUE,
        -- NV.NAV_CHG AS NAV_CHG,
        TO_NUMERIC(NAV.NAV, 38, 4) AS NAV_PER_SHARE,
        TO_NUMERIC(NAV.NET_SHARES_OUTST, 38, 3) AS NET_CAPSTOCK_SHARES_OUTSTANDING,
        NAV.HASH_DIFF,
        TRY_TO_DATE(NAV.DATE_ADDED, 'YYYYMMDD') AS "LOAD_DATE"
    FROM 
        IM_VAULT_DEV.REFERENCE.NAV_MANUAL_ADD NAV 
    JOIN 
        ACFWRP 
        ON (NAV.FUND_ID=ACFWRP .STT_MCH_ACCOUNT_CODE 
        AND TO_DATE(NAV_DATE, 'YYYYMMDD')>= ACFWRP .FROM_DATE 
        AND  TO_DATE(NAV_DATE, 'YYYYMMDD')<= ACFWRP .TO_DATE
        )
    JOIN 
        FC FC
        ON(FC.FUND_WRAPPER_INSIGHTS_TICKER=ACFWRP .FUND_WRAPPER_INSIGHTS_TICKER AND NAV.BASIS_IND=FC.STT_MCH_BASIS_IND
        AND TO_DATE(NAV_DATE, 'YYYYMMDD')>= FC.FROM_DATE
        AND  TO_DATE(NAV_DATE, 'YYYYMMDD')<= FC.TO_DATE
        )
),
OVR_RECORDS AS (
    SELECT *
    FROM
        (
        SELECT
             HASH_DIFF
            ,OVERRIDE_TYPE
            ,BUSINESS_DATE
            ,LOAD_DATETIME
            ,ATTRIBUTE_NAME
            ,ATTRIBUTE_VALUE
            ,ROW_NUMBER() OVER (PARTITION BY HASH_DIFF, ATTRIBUTE_NAME
                                  ORDER BY LOAD_DATETIME DESC) AS "RECORD_PRIORITY"
        FROM
            IM_VAULT_DEV.NEEDED_A_PLACE.OVERRIDE_LOOKUP
        )
    WHERE "RECORD_PRIORITY" = '1'
),
EXCLUDE_CHECK AS (
    SELECT
        OVR_R.HASH_DIFF
    FROM
        OVR_RECORDS OVR_R
    WHERE OVR_R.OVERRIDE_TYPE = 'Exclude'
),
PIVOT_OVR AS (
    SELECT
        OVR_R.HASH_DIFF
        ,MAX(CASE
             WHEN OVR_R.ATTRIBUTE_NAME = 'NAV_CALC_DATE'
             AND OVR_R.OVERRIDE_TYPE = 'Override'
             THEN OVR_R.ATTRIBUTE_VALUE END) AS OVERRIDE_NAV_CALC_DATE
        ,MAX(CASE
             WHEN OVR_R.ATTRIBUTE_NAME = 'NET_ASSET_VALUE'
             AND OVR_R.OVERRIDE_TYPE = 'Override'
             THEN OVR_R.ATTRIBUTE_VALUE END) AS OVERRIDE_NET_ASSET_VALUE
        ,MAX(CASE
             WHEN OVR_R.ATTRIBUTE_NAME = 'NAV_PER_SHARE'
             AND OVR_R.OVERRIDE_TYPE = 'Override'
             THEN OVR_R.ATTRIBUTE_VALUE END) AS OVERRIDE_NAV_PER_SHARE
        ,MAX(CASE
             WHEN OVR_R.ATTRIBUTE_NAME = 'NET_CAPSTOCK_SHARES_OUTSTANDING'
             AND OVR_R.OVERRIDE_TYPE = 'Override'
             THEN OVR_R.ATTRIBUTE_VALUE END) AS OVERRIDE_NET_CAPSTOCK_SHARES_OUTSTANDING
        ,MAX(OVR_R.LOAD_DATETIME) AS "LOAD_DATETIME"
    FROM
        OVR_RECORDS OVR_R
    WHERE OVR_R.OVERRIDE_TYPE = 'Override'
    GROUP BY OVR_R.HASH_DIFF
)
SELECT
    FNS.FUND_CLASS_ID AS FUND_CLASS_ID
    ,FNS.FUND_CLASS_HKEY AS FUND_CLASS_HKEY
    ,FNS.BUSINESS_DATE AS BUSINESS_DATE
    ,COALESCE(CASE
              WHEN OL."OVERRIDE_NAV_CALC_DATE" IS NOT NULL
              AND OL.LOAD_DATETIME > FNS.LOAD_DATETIME
              THEN OL."OVERRIDE_NAV_CALC_DATE"
              ELSE NULL
              END, FNS.NAV_CALC_DATE) AS "NAV_CALC_DATE"
    ,COALESCE(CASE
              WHEN OL."OVERRIDE_NET_ASSET_VALUE" IS NOT NULL
              AND OL.LOAD_DATETIME > FNS.LOAD_DATETIME
              THEN OL."OVERRIDE_NET_ASSET_VALUE"
              ELSE NULL
              END, FNS.NET_ASSET_VALUE) AS "NET_ASSET_VALUE"
     ,COALESCE(CASE
              WHEN OL."OVERRIDE_NAV_PER_SHARE" IS NOT NULL
              AND OL.LOAD_DATETIME > FNS.LOAD_DATETIME
              THEN OL."OVERRIDE_NAV_PER_SHARE"
              ELSE NULL
              END, FNS.NAV_PER_SHARE) AS "NAV_PER_SHARE"
     ,COALESCE(CASE
              WHEN OL."OVERRIDE_NET_CAPSTOCK_SHARES_OUTSTANDING" IS NOT NULL
              AND OL.LOAD_DATETIME > FNS.LOAD_DATETIME
              THEN OL."OVERRIDE_NET_CAPSTOCK_SHARES_OUTSTANDING"
              ELSE NULL
              END, FNS.NET_CAPSTOCK_SHARES_OUTSTANDING) AS "NET_CAPSTOCK_SHARES_OUTSTANDING"
    ,FNS.LOAD_DATETIME
    ,FNS.HASH_DIFF
FROM FUND_CLASS_NAV_SAT FNS
LEFT JOIN
    PIVOT_OVR OL
    ON OL.HASH_DIFF = FNS.HASH_DIFF
WHERE
    FNS.HASH_DIFF NOT IN (
        SELECT
            HASH_DIFF
        FROM
            EXCLUDE_CHECK
    )
);