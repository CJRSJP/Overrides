create or replace view IM_VAULT_DEV.BDV.FUND_CLASS_PERFORMANCE_SAT_CR_DEV(
	FUND_CLASS_HKEY,
	FUND_CLASS_BKEY,
	PERF_DATE,
	ABS_PERF_DAILY,
	ABS_PERF_WEEKLY,
	ABS_PERF_M1,
	ABS_PERF_M3,
	ABS_PERF_M6,
	ABS_PERF_Y1,
	ABS_PERF_Y3,
	ABS_PERF_Y5,
	ABS_PERF_Y7,
	ABS_PERF_Y10,
	ABS_PERF_INCEPTION,
	LOAD_DATETIME
) COMMENT='NO COMMENT PROVIDED'
 as (
WITH FV_HUB AS(
SELECT FVH.*
FROM "IM_VAULT"."RDV"."FUND_CLASS_HUB" FVH
INNER JOIN (SELECT FUND_CLASS_HKEY, LAST_VALUE(LOAD_DATETIME) OVER (PARTITION BY FUND_CLASS_HKEY ORDER BY LOAD_DATETIME) AS LOAD_DATETIME
            FROM "IM_VAULT"."RDV"."FUND_CLASS_HUB") A
ON FVH.FUND_CLASS_HKEY = A.FUND_CLASS_HKEY
AND FVH.LOAD_DATETIME = A.LOAD_DATETIME
)
, FV_SAL AS(
SELECT FVSAL.*
FROM "IM_VAULT"."RDV"."FUND_CLASS_SAL" FVSAL
INNER JOIN (SELECT SAL_FUND_CLASS_HASH_KEY, LAST_VALUE(LOAD_DATETIME) OVER (PARTITION BY SAL_FUND_CLASS_HASH_KEY ORDER BY LOAD_DATETIME) AS LOAD_DATETIME
            FROM "IM_VAULT"."RDV"."FUND_CLASS_SAL") A
ON FVSAL.SAL_FUND_CLASS_HASH_KEY = A.SAL_FUND_CLASS_HASH_KEY
AND FVSAL.LOAD_DATETIME = A.LOAD_DATETIME
)
, FC_PERFORMANCE AS(
SELECT    FH2.FUND_CLASS_HKEY
         ,FH2.FUND_CLASS_BKEY
         ,TO_DATE(FVPS.PRICE_DATE) AS PERF_DATE
--         ,LAG(FVPS.PRICE,DATE_TRUNC('YEAR', TO_DATE(FVPS.PRICE_DATE)), DATEDIFF(DAYS,DATE_TRUNC('YEAR', TO_DATE(FVPS.PRICE_DATE)),TO_DATE(FVPS.PRICE_DATE))) OVER (PARTITION BY FVPS.CITICODE ORDER BY FVPS.PRICE_DATE)
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,1) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_DAILY
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,7) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_WEEKLY   
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,30) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_M1
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,90) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_M3
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,120) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_M6
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,365) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_Y1
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,1095) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_Y3
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,1825) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_Y5
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,2555) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_Y7
         ,TO_DECIMAL((FVPS.PRICE / LAG(FVPS.PRICE,3650) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_Y10
         ,TO_DECIMAL((FVPS.PRICE / FIRST_VALUE(FVPS.PRICE) OVER (PARTITION BY FVPS.FUND_CLASS_HKEY ORDER BY FVPS.PRICE_DATE)) -1, 38,12) AS ABS_PERF_INCEPTION
         ,TO_DATE(FVPS.LOAD_DATETIME) AS LOAD_DATETIME
  FROM IM_VAULT.RDV.FUND_CLASS_FE_PRICE_SAT FVPS
  INNER JOIN FV_HUB FH
      ON FVPS.FUND_CLASS_HKEY = FH.FUND_CLASS_HKEY
  INNER JOIN FV_SAL FVS
      ON FVS.DUPLICATE_FUND_CLASS_HKEY = FH.FUND_CLASS_HKEY
  INNER JOIN FV_HUB FH2
      ON FH2.FUND_CLASS_HKEY = FVS.MASTER_FUND_CLASS_HKEY
)
, OVR_RECORDS AS (
    SELECT *
    FROM (
        SELECT OL.H_KEY,
               OL.BUSINESS_DATE,
               OL.ATTRIBUTE_NAME,
               OL.ATTRIBUTE_VALUE,
               OL.LOAD_DATETIME,
               ROW_NUMBER() OVER (PARTITION BY OL.H_KEY, OL.BUSINESS_DATE, OL.ATTRIBUTE_NAME
                                  ORDER BY OL.LOAD_DATETIME DESC) AS "DECLARED_RANK"
        FROM IM_VAULT_DEV.REFERENCE.OVERRIDE_LOOKUP OL)
    WHERE "DECLARED_RANK" = '1'
)
SELECT  FUND_CLASS_HKEY,
        FUND_CLASS_BKEY,
        PERF_DATE,
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_DAILY'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_DAILY)
            ELSE FCSPS.ABS_PERF_DAILY END) AS "ABS_PERF_DAILY1",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_WEEKLY'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_WEEKLY)
            ELSE FCSPS.ABS_PERF_WEEKLY END) AS "ABS_PERF_WEEKLY1",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_M1'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_M1)
            ELSE FCSPS.ABS_PERF_M1 END) AS "ABS_PERF_M1",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_M3'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_M3)
            ELSE FCSPS.ABS_PERF_M3 END) AS "ABS_PERF_M3",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_M6'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_M6)
            ELSE FCSPS.ABS_PERF_M6 END) AS "ABS_PERF_M6",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_Y1'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_Y1)
            ELSE FCSPS.ABS_PERF_Y1 END) AS "ABS_PERF_Y1",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_Y3'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_Y3)
            ELSE FCSPS.ABS_PERF_Y3 END) AS "ABS_PERF_Y3",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_Y5'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_Y5)
            ELSE FCSPS.ABS_PERF_Y5 END) AS "ABS_PERF_Y5",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_Y7'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_Y7)
            ELSE FCSPS.ABS_PERF_Y7 END) AS "ABS_PERF_Y7",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_Y10'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_Y10)
            ELSE FCSPS.ABS_PERF_Y10 END) AS "ABS_PERF_Y10",
        MAX(CASE
            WHEN OL.ATTRIBUTE_NAME = 'ABS_PERF_INCEPTION'
            THEN COALESCE(OL.ATTRIBUTE_VALUE, FCSPS.ABS_PERF_INCEPTION)
            ELSE FCSPS.ABS_PERF_INCEPTION END) AS "ABS_PERF_INCEPTION",
        FCSPS.LOAD_DATETIME
FROM FC_PERFORMANCE FCSPS
LEFT JOIN OVR_RECORDS OL ON OL.H_KEY = FCSPS.FUND_CLASS_HKEY AND
                            OL.BUSINESS_DATE = FCSPS.PERF_DATE AND
                            OL.ATTRIBUTE_NAME IN ('ABS_PERF_DAILY',
                                                  'ABS_PERF_WEEKLY',
                                                  'ABS_PERF_M1',
                                                  'ABS_PERF_M3',
                                                  'ABS_PERF_M6',
                                                  'ABS_PERF_Y1',
                                                  'ABS_PERF_Y3',
                                                  'ABS_PERF_Y5',
                                                  'ABS_PERF_Y7',
                                                  'ABS_PERF_Y10',
                                                  'ABS_PERF_INCEPTION') AND
                                                  OL.LOAD_DATETIME > FCSPS.LOAD_DATETIME
WHERE FCSPS.FUND_CLASS_HKEY = '00B26A14246AF2997E897E6C56A03F7C' AND FCSPS.PERF_DATE = '2016-12-27'
GROUP BY FUND_CLASS_HKEY, FUND_CLASS_BKEY, PERF_DATE, FCSPS.LOAD_DATETIME
ORDER BY FUND_CLASS_HKEY
);